/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw2(PApplet appc, GWinData data) { //_CODE_:window1:331211:
  appc.background(230);
} //_CODE_:window1:331211:

public void CGsliderX_change1(GCustomSlider source, GEvent event) { //_CODE_:CGsliderX:647135:
  //Make CG bot's x value equal to the slider's value
  CGbotX = CGsliderX.getValueI();
  paused = true;
} //_CODE_:CGsliderX:647135:

public void restartButton_click1(GButton source, GEvent event) { //_CODE_:restartButton:383410:

  paused = true; //Pause the game
  
  frame = 1; //Reset the # of frames
  
  //Empty out our array lists!
  robotList = new ArrayList<Robot>();
  markerList = new ArrayList<Marker>();
  
  //Plug in user-inputted values into our variables
  CGbotX = CGsliderX.getValueI();
  DMbotX = DMsliderX.getValueI();
  CGbotSS = CGsliderSS.getValueI();
  DMbotSS = DMsliderSS.getValueI();
  CGbotWS = CGsliderWS.getValueI();
  DMbotWS = DMsliderWS.getValueI();
  
  //Construct new robots with the user-inputted variables!
  Robot tim = new Robot(CGbotX,200,CGbotSS,CGbotWS,1,1);
  Robot rob = new Robot(DMbotX,600,DMbotSS,DMbotWS,2,1);
  
  //Load the sprites once again for the animation
  tim.loadSprites();
  rob.loadSprites();
  
  //Unpause the animation!
  paused = false;
  
} //_CODE_:restartButton:383410:

public void DMsliderX_change1(GCustomSlider source, GEvent event) { //_CODE_:DMsliderX:797458:
  //Make DM bot's x value equal to the slider's value
  DMbotX = DMsliderX.getValueI();
  paused = true;
} //_CODE_:DMsliderX:797458:

public void CGsliderSS_change1(GCustomSlider source, GEvent event) { //_CODE_:CGsliderSS:913440:
  //Make CG bot's step size equal to the slider's value
  CGbotSS = CGsliderSS.getValueI();
  paused = true;
} //_CODE_:CGsliderSS:913440:

public void DMsliderSS_change1(GCustomSlider source, GEvent event) { //_CODE_:DMsliderSS:571446:
  //Make DM bot's step size equal to the slider's value
  DMbotSS = DMsliderSS.getValueI();
  paused = true;
} //_CODE_:DMsliderSS:571446:

public void CGsliderWS_change1(GCustomSlider source, GEvent event) { //_CODE_:CGsliderWS:202721:
  //Make CG bot's walking speed equal to the slider's value
  CGbotWS = CGsliderWS.getValueI();
  paused = true;
} //_CODE_:CGsliderWS:202721:

public void DMsliderWS_change1(GCustomSlider source, GEvent event) { //_CODE_:DMsliderWS:410406:
  //Make DM bot's walking speed equal to the slider's value
  DMbotWS = DMsliderWS.getValueI();
  paused = true;
} //_CODE_:DMsliderWS:410406:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "X", 0, 0, 400, 500, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw2");
  CGsliderX = new GCustomSlider(window1, 0, 29, 399, 50, "blue18px");
  CGsliderX.setShowValue(true);
  CGsliderX.setShowLimits(true);
  CGsliderX.setLimits(800, 0, 1600);
  CGsliderX.setNumberFormat(G4P.INTEGER, 0);
  CGsliderX.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  CGsliderX.setOpaque(false);
  CGsliderX.addEventHandler(this, "CGsliderX_change1");
  label1 = new GLabel(window1, 1, 6, 399, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Starting X-Value for Constant Growth Robot");
  label1.setOpaque(false);
  restartButton = new GButton(window1, 5, 462, 80, 30);
  restartButton.setText("Restart");
  restartButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  restartButton.addEventHandler(this, "restartButton_click1");
  label2 = new GLabel(window1, -1, 80, 401, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Starting X-Value for Doubling Robot");
  label2.setOpaque(false);
  DMsliderX = new GCustomSlider(window1, 1, 101, 398, 50, "blue18px");
  DMsliderX.setShowValue(true);
  DMsliderX.setShowLimits(true);
  DMsliderX.setLimits(800, 0, 1600);
  DMsliderX.setNumberFormat(G4P.INTEGER, 0);
  DMsliderX.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  DMsliderX.setOpaque(false);
  DMsliderX.addEventHandler(this, "DMsliderX_change1");
  label3 = new GLabel(window1, -1, 153, 400, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Step Size of Constant Growth Robot");
  label3.setOpaque(false);
  CGsliderSS = new GCustomSlider(window1, 1, 175, 397, 50, "grey_blue");
  CGsliderSS.setShowValue(true);
  CGsliderSS.setShowLimits(true);
  CGsliderSS.setLimits(25, 1, 50);
  CGsliderSS.setNumberFormat(G4P.INTEGER, 0);
  CGsliderSS.setOpaque(false);
  CGsliderSS.addEventHandler(this, "CGsliderSS_change1");
  DMsliderSS = new GCustomSlider(window1, 0, 248, 398, 50, "grey_blue");
  DMsliderSS.setShowValue(true);
  DMsliderSS.setShowLimits(true);
  DMsliderSS.setLimits(25, 1, 50);
  DMsliderSS.setNumberFormat(G4P.INTEGER, 0);
  DMsliderSS.setOpaque(false);
  DMsliderSS.addEventHandler(this, "DMsliderSS_change1");
  label4 = new GLabel(window1, -1, 226, 400, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Step Size of Doubling Method Robot");
  label4.setOpaque(false);
  label5 = new GLabel(window1, -2, 300, 400, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Walking Speed of Constant Growth Robot");
  label5.setOpaque(false);
  CGsliderWS = new GCustomSlider(window1, -2, 321, 401, 50, "grey_blue");
  CGsliderWS.setShowValue(true);
  CGsliderWS.setShowLimits(true);
  CGsliderWS.setLimits(5, 1, 10);
  CGsliderWS.setNumberFormat(G4P.INTEGER, 0);
  CGsliderWS.setOpaque(false);
  CGsliderWS.addEventHandler(this, "CGsliderWS_change1");
  label6 = new GLabel(window1, 1, 373, 398, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Walking Speed of Doubling Method Robot");
  label6.setOpaque(false);
  DMsliderWS = new GCustomSlider(window1, 1, 394, 397, 50, "grey_blue");
  DMsliderWS.setShowValue(true);
  DMsliderWS.setShowLimits(true);
  DMsliderWS.setLimits(5, 1, 10);
  DMsliderWS.setNumberFormat(G4P.INTEGER, 0);
  DMsliderWS.setOpaque(false);
  DMsliderWS.addEventHandler(this, "DMsliderWS_change1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GCustomSlider CGsliderX; 
GLabel label1; 
GButton restartButton; 
GLabel label2; 
GCustomSlider DMsliderX; 
GLabel label3; 
GCustomSlider CGsliderSS; 
GCustomSlider DMsliderSS; 
GLabel label4; 
GLabel label5; 
GCustomSlider CGsliderWS; 
GLabel label6; 
GCustomSlider DMsliderWS; 
